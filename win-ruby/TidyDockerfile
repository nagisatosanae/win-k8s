FROM mcr.microsoft.com/windows/servercore:ltsc2019 as core
# FROM mcr.microsoft.com/windows/servercore:1809
# FROM microsoft/nanoserver

# RUN powershell Get-WindowsFeature web-server
# RUN powershell Install-windowsfeature web-server
# RUN powershell add-windowsfeature web-asp-net45






# Download base ruby
# RUN powershell \
#     [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
#     Invoke-WebRequest https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.6.6-2/rubyinstaller-devkit-2.6.6-2-x64.exe -Outfile rubyinstaller.exe
# # Download git
# RUN powershell \
#     [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
#     Invoke-WebRequest https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe -Outfile git-installer.exe
# # Download Inno Setup    
# RUN powershell \
#     [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
#     Invoke-WebRequest http://www.jrsoftware.org/download.php/is.exe -Outfile inno-setup.exe

# ADD https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.4.6-1/rubyinstaller-devkit-2.4.6-1-x64.exe rubyinstaller.exe
# ADD https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-3.1.3-1/rubyinstaller-devkit-3.1.3-1-x64.exe rubyinstaller.exe
# ADD https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe git-installer.exe
# ADD http://www.jrsoftware.org/download.php/is.exe inno-setup.exe


WORKDIR c:\\tmp
# ADD https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-3.1.3-1/rubyinstaller-devkit-3.1.3-1-x64.exe C:/rubyinstaller.exe
# ADD https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe C:/git-installer.exe
# ADD http://www.jrsoftware.org/download.php/is.exe  C:/git-installer.exe


COPY rubyinstaller-devkit-3.1.3-1-x64.exe rubyinstaller.exe
COPY Git-2.20.1-64-bit.exe git-installer.exe
COPY innosetup-6.2.2.exe inno-setup.exe


# USER ContainerUser
# Install base ruby and initialize Devkit
RUN (cmd /c C:\\tmp\\rubyinstaller.exe /verysilent /tasks="assocfiles,modpath" /dir="C:\ruby31")
# RUN powershell $env:PATH = [Environment]::GetEnvironmentVariable('PATH','Machine'); \
#     $env:RUBYOPT = [Environment]::GetEnvironmentVariable('RUBYOPT','Machine')
# RUN ruby --version
# RUN ridk install 1

# # Install git
# RUN cmd /c git-installer.exe /verysilent
# RUN git --version

# # Install Inno Setup
# RUN cmd /c inno-setup.exe /verysilent /allusers
# RUN powershell [Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';c:/Program Files (x86)/Inno Setup 6', 'Machine')
# RUN iscc --version || (exit 0)

# RUN ridk enable

# # pacman fails with EXDEV error after download when /var/cache/pkg is bind mounted into the container.
# # Therefore mount /var/cache directory an let pacman create the pkg directory.
# RUN ridk exec rm -r c:/ruby31-x64/msys64/var/cache/pacman/pkg

# # # Import the git repository and unpack it in /build
# # WORKDIR /build
# # COPY gitrepo .git/
# # RUN dir
# # RUN git checkout -f

# # # Install required rubygems
# # RUN gem install bundler --no-doc
# # RUN bundle

# # # WORKDIR /build/docker
# # # CMD rake



# RUN gem install oj --no-doc
# RUN gem install json --no-doc
# RUN gem install rexml --no-doc
# RUN gem install fluentd --no-doc
# RUN gem install win32-service --no-doc
# RUN gem install win32-ipc --no-doc
# RUN gem install win32-event --no-doc
# RUN gem sources --clear-all


# RUN dir ..\\

# CMD [ "ping", "localhost", "-t" ]



# RUN /ruby31/unins000.exe /ruby31/unins000.exe

# COPY dapr-1.11.1 dapr-1.11.1


# RUN robocopy C:\\ruby31 C:\\ruby31_bak /E


# RUN dir c:\\ruby31


RUN powershell icacls c:\\ruby31 /grant "BUILTIN\Administrators:F" /t




FROM mcr.microsoft.com/windows/nanoserver:1809
COPY fluent.conf /fluent/conf/fluent.conf
COPY --from=core c:\\ruby31 c:\\ruby31
ENV FLUENTD_CONF="fluent.conf"
ENV Path="${Path};C:\\ruby31\\bin"
CMD [ "ping", "localhost", "-t" ]









# RUN mkdir C:\\ruby31\\lib
# COPY --from=core [ "C:\\License.txt", "C:\\License.txt_bak" ]
# COPY --from=core [ "C:\\ruby31\\LICENSE.txt", "C:\\ruby31\\LICENSE.txt" ]
# COPY --from=core ["C:\ruby31\lib\LICENSE.txt", "C:\ruby31\lib\LICENSE.txt"]
# COPY --from=core c:/ruby31/unins000.exe c:/tmp/gg
# COPY --from=core c:\\tmp\\inno-setup.exe c:\\tmp\\inno-setup.exe
# COPY --from=core /License.txt /License.txt_bak
# COPY --from=core c:\\License.txt c:\\License.txt_bak
# COPY --from=core c:\\DevKit c:\\DevKit



